final class TwoDArrayDS {
    private let arr: [[Int]]

    // MARK: Initializer

    init(arr: [[Int]]) {
        self.arr = arr
    }
    
    // MARK: Functions

    func run() -> Int {
        var maximumHourglassSum = 0

        /*
         1 1 1 0 0 0
         0 1 0 0 0 0
         1 1 1 0 0 0
         0 0 2 4 4 0
         0 0 0 2 0 0
         0 0 1 2 4 0
         */

        let hourglasses = [
            [[0, 0], [0, 1], [0, 2], [1, 1], [2, 0], [2, 1], [2, 2]],
            [[0, 1], [0, 2], [0, 3], [1, 2], [2, 1], [2, 2], [2, 3]],
            [[0, 2], [0, 3], [0, 4], [1, 3], [2, 2], [2, 3], [2, 4]],
            [[0, 3], [0, 4], [0, 5], [1, 4], [2, 3], [2, 4], [2, 5]],
            [[1, 0], [1, 1], [1, 2], [2, 1], [3, 0], [3, 1], [3, 2]],
            [[1, 1], [1, 2], [1, 3], [2, 2], [3, 1], [3, 2], [3, 3]],
            [[1, 2], [1, 3], [1, 4], [2, 3], [3, 2], [3, 3], [3, 4]],
            [[1, 3], [1, 4], [1, 5], [2, 4], [3, 3], [3, 4], [3, 5]],
            [[2, 0], [2, 1], [2, 2], [3, 1], [4, 0], [4, 1], [4, 2]],
            [[2, 1], [2, 2], [2, 3], [3, 2], [4, 1], [4, 2], [4, 3]],
            [[2, 2], [2, 3], [2, 4], [3, 3], [4, 2], [4, 3], [4, 4]],
            [[2, 3], [2, 4], [2, 5], [3, 4], [4, 3], [4, 4], [4, 5]],
            [[3, 0], [3, 1], [3, 2], [4, 1], [5, 0], [5, 1], [5, 2]],
            [[3, 1], [3, 2], [3, 3], [4, 2], [5, 1], [5, 2], [5, 3]],
            [[3, 2], [3, 3], [3, 4], [4, 3], [5, 2], [5, 3], [5, 4]],
            [[3, 3], [3, 4], [3, 5], [4, 4], [5, 3], [5, 4], [5, 5]]
        ]

        hourglasses.forEach { sequence in
            var sum = 0

            sequence.forEach { indexes in
                sum += arr[indexes[0]][indexes[1]]
            }

            if maximumHourglassSum < sum {
                maximumHourglassSum = sum
            }
        }

        return maximumHourglassSum
    }
}
